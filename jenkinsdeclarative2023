pipeline{

agent any
parameters {
  choice choices: ['development', 'master', 'qa'], description: 'Select Branch Name', name: 'BranchName'
}



tools{
maven "maven 3.9.1"
}

triggers {
  pollSCM('* * * * *')
   //cron('* * * * *')
}

options {
  timestamps()
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
}


stages{
    
    
//Get the code from GitHub
stage('Checkoutcode'){
steps{
slacknotifications("STARTED")
git credentialsId: 'Git-Hub-Credentials', url: 'https://github.com/Radhya-Reddy/maven-web-application.git'
}
}
//Do the Build
stage('Do the Build'){
steps{
sh "mvn clean package"
}
}

//Execute the sonarqube report
stage('Execute the sonarqube report'){
steps{
sh"mvn sonar:sonar"
}
}

//Upload the artifacts into the nexus
stage('Upload the artifacts into nexus'){
steps{
sh "mvn deploy"  
}
}

//deploy the app into the Tomcatserver
stage('Deploy the app into Tomactaserver'){
steps{
sshagent(['Tomcatcredentials']) {
sh "scp -o  StrictHostKeyChecking=no  target/maven-web-application.war ec2-user@3.110.87.28:/opt/apache-tomcat-9.0.73/webapps/"
}
}
}
}//stages closing

post {
  success {
    slacknotifications(currentBuild.result)
  }
  failure {
   slacknotifications(currentBuild.result)
  }
}

}//Pipeline closing

def slacknotifications(String buildStatus = 'STARTED') {
 
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFF000'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
